// <auto-generated />
using System;
using Contact.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Contact.Infrastructure.Migrations
{
    [DbContext(typeof(ContactContext))]
    [Migration("20220810140109_AddedGroupSettingsFileds")]
    partial class AddedGroupSettingsFileds
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Contact.Domain.AggregatesModel.GroupAggregate.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Groups", (string)null);
                });

            modelBuilder.Entity("Contact.Domain.AggregatesModel.GroupAggregate.GroupNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CityName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Company")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Gender")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<int>("LastModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupNumbers", (string)null);
                });

            modelBuilder.Entity("Contact.Domain.AggregatesModel.GroupAggregate.GroupSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AutoRegister")
                        .HasColumnType("int");

                    b.Property<int>("AutoRegisterCancel")
                        .HasColumnType("int");

                    b.Property<string>("AutoRegisterCancelKeyWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AutoRegisterCancelLineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AutoRegisterCancelMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AutoRegisterKeyWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AutoRegisterLineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AutoRegisterMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.ToTable("GroupSettings", (string)null);
                });

            modelBuilder.Entity("Contact.Domain.AggregatesModel.GroupAggregate.GroupNumber", b =>
                {
                    b.HasOne("Contact.Domain.AggregatesModel.GroupAggregate.Group", "Group")
                        .WithMany("GroupNumbers")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Contact.Domain.AggregatesModel.GroupAggregate.GroupSettings", b =>
                {
                    b.HasOne("Contact.Domain.AggregatesModel.GroupAggregate.Group", "Group")
                        .WithOne("GroupSettings")
                        .HasForeignKey("Contact.Domain.AggregatesModel.GroupAggregate.GroupSettings", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Contact.Domain.AggregatesModel.GroupAggregate.Group", b =>
                {
                    b.Navigation("GroupNumbers");

                    b.Navigation("GroupSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
